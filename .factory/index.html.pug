extends _index.pug

block state
  - const scripts = ['../tag-picker/index.min.js', 'index.min.js']
  - const styles = ['../layout/index.min.css', '../layout/anchor/index.min.css', '../tag-picker/index.min.css']
  - const theme = '#000'
  - const title = 'Tag Picker Sort ' + version

block script
  script
    | const picker = new TagPicker(document.forms[0].tags, {
    |     with: [TagPicker.Sort]
    | });
    | picker.on('sort.tag', function (name) {
    |     console.log(name);
    |     console.log(this.value);
    | });
    | picker.on('sort.tags', function (names) {
    |     console.log(names);
    |     console.log(this.value);
    | });

block style
  style
    | body {
    |   margin-left: auto;
    |   margin-right: auto;
    |   max-width: 60rem;
    | }
    | .tag-picker {
    |   flex: 1;
    | }

block content
  header
    hgroup
      h1
        a(href='../tag-picker/index.html#extensions') &laquo;
        = ' ' + title
      p This extension lets you sort the tag items both programmatically and manually by dragging them into the desired order.
  main
    form(method='get' target='_blank')
      p(role='group')
        input(name='tags' placeholder!='Tags go here&hellip;' type='text' value='foo, bar, baz, qux')
        = ' '
        button(type='submit') Submit
      p(role='group')
        button(onclick='return picker.reverse(), false;') Reverse
        = ' '
        button(onclick='return picker.sort(), false;') Sort
    h2#usage
      a(aria-hidden='true' href='#usage') #
      = ' Usage'
    h3#browser
      a(aria-hidden='true' href='#browser') #
      = ' Browser'
    pre: code
      | &lt;script src="#[a(href='../tag-picker/index.min.js' target='_blank') ./tag-picker/index.min.js]"&gt;&lt;/script&gt;
      | &lt;script src="#[a(href='index.min.js' target='_blank') ./tag-picker.sort/index.min.js]"&gt;&lt;/script&gt;
      | &lt;script&gt;
      |   const picker = new TagPicker(document.querySelector('input'), {
      |       with: [TagPicker.Sort]
      |   });
      | &lt;/script&gt;
    h3#node
      a(aria-hidden='true' href='#node') #
      = ' Node.js'
    h4#cjs
      a(aria-hidden='true' href='#cjs') #
      = ' CommonJS'
    pre: code
      | const TagPicker = require('@taufik-nurrohman/tag-picker').default;
      | const TagPickerSort = require('@taufik-nurrohman/tag-picker.sort').default;
      |
      | const picker = new TagPicker(document.querySelector('input'), {
      |     with: [TagPickerSort]
      | });
    h4#mjs
      a(aria-hidden='true' href='#mjs') #
      = ' ECMAScript'
    pre: code
      | import TagPicker from '@taufik-nurrohman/tag-picker';
      | import TagPickerSort from '@taufik-nurrohman/tag-picker.sort';
      |
      | const picker = new TagPicker(document.querySelector('input'), {
      |     with: [TagPickerSort]
      | });
    h2#methods
      a(aria-hidden='true' href='#methods') #
      = ' Methods'
    h3#instance-methods
      a(aria-hidden='true' href='#instance-methods') #
      = ' Instance Methods'
    h4#instance-method-reverse
      a(aria-hidden='true' href='#instance-method-reverse') #
      = ' '
      code picker.reverse()
    p Reverses the order of the current tag items.
    pre: code
      | picker.reverse();
    h4#instance-method-sort
      a(aria-hidden='true' href='#instance-method-sort') #
      = ' '
      code picker.sort(method)
    p Sorts the current tag items in alphabetical order (by default).
    pre: code
      | picker.sort();
    pre: code
      | picker.sort((a, b) =&gt; {
      |     return a.localeCompare(b, undefined, {
      |         numeric: true,
      |         sensitivity: 'base'
      |     });
      | });
  footer
    hr
    p
      != '&copy; ' + year + ' '
      a(href='/') Taufik Nurrohman